{
  "description": "Runtime is the Schema for the runtimes API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "RuntimeSpec defines the desired state of Runtime",
      "properties": {
        "allowOverrideSecretsWithSecretStoreCSIDriver": {
          "description": "AllowOverrideSecretsWithSecretStoreCSIDriver when `true` allows to override secrets with Secret Store CSI Driver.",
          "type": "boolean"
        },
        "automountServiceAccountToken": {
          "description": "AutomountServiceAccountToken specifies `automountServiceAccountToken` value for containers",
          "type": "boolean"
        },
        "buildGeneration": {
          "description": "BuildGeneration specifies the Build resource Generation. Changing BuildGeneration will force the app to restart with the latest image version.",
          "format": "int64",
          "type": "integer"
        },
        "databaseSecretRef": {
          "description": "DatabaseSecretRef specifies the name of the Secret containing database credentials for the environment.",
          "type": "string"
        },
        "deploymentPodAnnotations": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "DeploymentPodAnnotations is deployment annotations for the `master` and `worker` deployments.",
          "type": "object"
        },
        "image": {
          "description": "Image is the Mendix app container image.",
          "type": "string"
        },
        "livenessProbe": {
          "description": "LivenessProbe specifies configuration for the liveness probe.",
          "properties": {
            "exec": {
              "description": "Exec specifies the action to take.",
              "properties": {
                "command": {
                  "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "failureThreshold": {
              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
              "format": "int32",
              "type": "integer"
            },
            "grpc": {
              "description": "GRPC specifies an action involving a GRPC port. This is a beta field and requires enabling GRPCContainerProbe feature gate.",
              "properties": {
                "port": {
                  "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                  "format": "int32",
                  "type": "integer"
                },
                "service": {
                  "description": "Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). \n If this is not specified, the default behavior is defined by gRPC.",
                  "type": "string"
                }
              },
              "required": [
                "port"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "httpGet": {
              "description": "HTTPGet specifies the http request to perform.",
              "properties": {
                "host": {
                  "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                  "type": "string"
                },
                "httpHeaders": {
                  "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                  "items": {
                    "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                    "properties": {
                      "name": {
                        "description": "The header field name",
                        "type": "string"
                      },
                      "value": {
                        "description": "The header field value",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "value"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "path": {
                  "description": "Path to access on the HTTP server.",
                  "type": "string"
                },
                "port": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                  "x-kubernetes-int-or-string": true
                },
                "scheme": {
                  "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                  "type": "string"
                }
              },
              "required": [
                "port"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "initialDelaySeconds": {
              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
              "format": "int32",
              "type": "integer"
            },
            "periodSeconds": {
              "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
              "format": "int32",
              "type": "integer"
            },
            "successThreshold": {
              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
              "format": "int32",
              "type": "integer"
            },
            "tcpSocket": {
              "description": "TCPSocket specifies an action involving a TCP port.",
              "properties": {
                "host": {
                  "description": "Optional: Host name to connect to, defaults to the pod IP.",
                  "type": "string"
                },
                "port": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                  "x-kubernetes-int-or-string": true
                }
              },
              "required": [
                "port"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "terminationGracePeriodSeconds": {
              "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
              "format": "int64",
              "type": "integer"
            },
            "timeoutSeconds": {
              "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
              "format": "int32",
              "type": "integer"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "metricsConfiguration": {
          "description": "MetricsConfiguration specifies configuration for collecting Mendix Runtime metrics.",
          "properties": {
            "interval": {
              "description": "StepInterval specifies a custom step for windowed statistics such as max. This should be aligned with your Prometheus scrape interval (1 minute by default) and can be left empty. This value is only used when using the native scraping mode. The value should be provided in ISO 8601 Duration format (e.g. 'PT1M').",
              "type": "string"
            },
            "mode": {
              "description": "Mode specifies the metrics mode to use (native or compatibility). If left empty, metrics will not be collected.",
              "type": "string"
            },
            "mxAgentConfig": {
              "description": "MxAgentConfig specifies a configuration for MxAgent, a Mendix Java instrumentation agent. This parameter works exactly like `METRICS_AGENT_CONFIG` in CF Buildpack and Mendix Cloud V4. Specifying a non-empty MxAgentConfig will enable collection of additional metrics in Mendix Runtime 9.7 and later versions. Warning: a future version of the Mendix Runtime will replace MxAgent with a native tracing feature, and MxAgent is expected to be deprecated in Mendix 10.",
              "type": "string"
            },
            "mxAgentInstrumentationConfig": {
              "description": "MxAgentInstrumentationConfig specifies instrumentation configuration for MxAgent, a Mendix Java instrumentation agent. This parameter works exactly like `METRICS_AGENT_INSTRUMENTATION_CONFIG` in CF Buildpack and Mendix Cloud V4. Specifying a non-empty MxAgentInstrumentationConfig will use a custom instrumentation config instead of the MxAgent configuration. This parameter is only used when MxAgentConfig is not empty. Warning: a future version of the Mendix Runtime will replace MxAgent with a native tracing feature, and MxAgent is expected to be deprecated in Mendix 10.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "metricsSidecarImage": {
          "description": "SidecarImage specifies the `m2ee-metrics` sidecar container image. Only used when Runtime metrics mode is set to compatibility.",
          "type": "string"
        },
        "metricsSidecarResources": {
          "description": "Resources specifies the `m2ee-metrics` sidecar container resource requests and requirements. Only used when Runtime metrics mode is set to compatibility.",
          "properties": {
            "claims": {
              "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable.",
              "items": {
                "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                "properties": {
                  "name": {
                    "description": "Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array",
              "x-kubernetes-list-map-keys": [
                "name"
              ],
              "x-kubernetes-list-type": "map"
            },
            "limits": {
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ],
                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                "x-kubernetes-int-or-string": true
              },
              "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
              "type": "object"
            },
            "requests": {
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ],
                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                "x-kubernetes-int-or-string": true
              },
              "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
              "type": "object"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "readinessProbe": {
          "description": "ReadinessProbe specifies configuration for the readiness probe.",
          "properties": {
            "exec": {
              "description": "Exec specifies the action to take.",
              "properties": {
                "command": {
                  "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "failureThreshold": {
              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
              "format": "int32",
              "type": "integer"
            },
            "grpc": {
              "description": "GRPC specifies an action involving a GRPC port. This is a beta field and requires enabling GRPCContainerProbe feature gate.",
              "properties": {
                "port": {
                  "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                  "format": "int32",
                  "type": "integer"
                },
                "service": {
                  "description": "Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). \n If this is not specified, the default behavior is defined by gRPC.",
                  "type": "string"
                }
              },
              "required": [
                "port"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "httpGet": {
              "description": "HTTPGet specifies the http request to perform.",
              "properties": {
                "host": {
                  "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                  "type": "string"
                },
                "httpHeaders": {
                  "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                  "items": {
                    "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                    "properties": {
                      "name": {
                        "description": "The header field name",
                        "type": "string"
                      },
                      "value": {
                        "description": "The header field value",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "value"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "path": {
                  "description": "Path to access on the HTTP server.",
                  "type": "string"
                },
                "port": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                  "x-kubernetes-int-or-string": true
                },
                "scheme": {
                  "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                  "type": "string"
                }
              },
              "required": [
                "port"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "initialDelaySeconds": {
              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
              "format": "int32",
              "type": "integer"
            },
            "periodSeconds": {
              "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
              "format": "int32",
              "type": "integer"
            },
            "successThreshold": {
              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
              "format": "int32",
              "type": "integer"
            },
            "tcpSocket": {
              "description": "TCPSocket specifies an action involving a TCP port.",
              "properties": {
                "host": {
                  "description": "Optional: Host name to connect to, defaults to the pod IP.",
                  "type": "string"
                },
                "port": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                  "x-kubernetes-int-or-string": true
                }
              },
              "required": [
                "port"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "terminationGracePeriodSeconds": {
              "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
              "format": "int64",
              "type": "integer"
            },
            "timeoutSeconds": {
              "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
              "format": "int32",
              "type": "integer"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "replicas": {
          "description": "Replicas specifies the number of replicas to use. Set this value to 0 to stop all replicas and stop the application.",
          "format": "int32",
          "type": "integer"
        },
        "resources": {
          "description": "Resources specifies the resource requests and requirements for the Mendix app container.",
          "properties": {
            "claims": {
              "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable.",
              "items": {
                "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                "properties": {
                  "name": {
                    "description": "Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array",
              "x-kubernetes-list-map-keys": [
                "name"
              ],
              "x-kubernetes-list-type": "map"
            },
            "limits": {
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ],
                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                "x-kubernetes-int-or-string": true
              },
              "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
              "type": "object"
            },
            "requests": {
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ],
                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                "x-kubernetes-int-or-string": true
              },
              "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
              "type": "object"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "runtimeConfiguration": {
          "description": "RuntimeConfiguration specifies Mendix Runtime configuration options.",
          "properties": {
            "applicationRootURL": {
              "description": "ApplicationRootURL specifies hostname to be used in the runtime. Generated based on AppURL from the Endpoint CR.",
              "type": "string"
            },
            "clientCertificates": {
              "description": "ClientCertificates specifies client certificates to be used for TLS (HTTPS) connections.",
              "items": {
                "description": "RuntimeClientCertificate contains details about a client certificate that can be provided to the Mendix Runtime.",
                "properties": {
                  "key": {
                    "description": "Key is the certificate private key, a base64-encoded PKCS12 (.pfx).",
                    "type": "string"
                  },
                  "password": {
                    "description": "Password specifies the password for the key, required by the Mendix Runtime.",
                    "type": "string"
                  },
                  "pinTo": {
                    "description": "PinTo specifies the list of Mendix modules or domain names which this certificate should be pinned to. Leave empty to use this as the default certificate.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "key",
                  "password"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "customConfiguration": {
              "description": "CustomConfiguration specifies Custom Runtime Settings The values should be provided in JSON format.",
              "type": "string"
            },
            "debuggerPassword": {
              "description": "DebuggerPassword specifies the password for mendix app debugger password.",
              "type": "string"
            },
            "dtapMode": {
              "description": "DTAPMode specifies the mode for running the Mendix application (Development, Test, Acceptance, Production). Always set this to P in production environments.",
              "type": "string"
            },
            "environmentVariables": {
              "description": "EnvironmentVariables allows to specify custom environment variables for the Mendix Runtime container. This can also be used to set Java options by providing in the JAVA_TOOL_OPTIONS environment variable.",
              "items": {
                "description": "EnvVar represents an environment variable present in a Container.",
                "properties": {
                  "name": {
                    "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                    "type": "string"
                  },
                  "valueFrom": {
                    "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                    "properties": {
                      "configMapKeyRef": {
                        "description": "Selects a key of a ConfigMap.",
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": "string"
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "key"
                        ],
                        "type": "object",
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "fieldRef": {
                        "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                        "properties": {
                          "apiVersion": {
                            "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                            "type": "string"
                          },
                          "fieldPath": {
                            "description": "Path of the field to select in the specified API version.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "fieldPath"
                        ],
                        "type": "object",
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "resourceFieldRef": {
                        "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                        "properties": {
                          "containerName": {
                            "description": "Container name: required for volumes, optional for env vars",
                            "type": "string"
                          },
                          "divisor": {
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          },
                          "resource": {
                            "description": "Required: resource to select",
                            "type": "string"
                          }
                        },
                        "required": [
                          "resource"
                        ],
                        "type": "object",
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "secretKeyRef": {
                        "description": "Selects a key of a secret in the pod's namespace",
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                            "type": "string"
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "key"
                        ],
                        "type": "object",
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "jettyOptions": {
              "description": "JettyOptions can be used to specify options for the jetty webserver in the Mendix Runtime. The values should be provided in JSON format.",
              "type": "string"
            },
            "logAutosubscribeLevel": {
              "description": "LogAutosubscribeLevel specifies the default logging level for the Mendix Runtime.",
              "type": "string"
            },
            "logLevels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "LogLevels represents configuration of node name to its log level setting.",
              "type": "object"
            },
            "microflowConstants": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "MicroflowConstants represents application constants (model options in the portal). This attribute should only be used in standalone mode.",
              "type": "object"
            },
            "mxAdminPassword": {
              "description": "MxAdminPassword specifies the password for the MxAdmin user. If left empty, the password will be left unchanged and the MxAdmin user will not be (re)-created.",
              "type": "string"
            },
            "myScheduledEvents": {
              "description": "MyScheduledEvents represents application scheduled events (model options in the portal). This attribute should only be used in standalone mode.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "runtimeLicense": {
              "description": "RuntimeLicense specifies the runtime license configuration.",
              "properties": {
                "id": {
                  "description": "ID specifies the LicenseId (UUID associated with the license) for an offline license.",
                  "type": "string"
                },
                "key": {
                  "description": "Key specifies the LicenseKey (the actual license) for an offline license.",
                  "type": "string"
                },
                "type": {
                  "description": "Type specifies the license type (empty for trial or no license).",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "scheduledEventExecution": {
              "description": "ScheduledEventExecution represents scheduled event execution (SPECIFIED/ALL/NONE). This attribute should only be used in standalone mode.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "secretProviderClass": {
          "description": "SecretProviderClass the name of SecretProviderClass object of Secret Store CSI Driver.",
          "type": "string"
        },
        "serviceAccountName": {
          "description": "ServiceAccountName specifies the name of the ServiceAccount that will be used in environment deployment.",
          "type": "string"
        },
        "sidecarImage": {
          "description": "SidecarImage specifies the M2EE sidecar container image.",
          "type": "string"
        },
        "sidecarResources": {
          "description": "Resources specifies the resource requests and requirements for the M2EE sidecar container.",
          "properties": {
            "claims": {
              "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable.",
              "items": {
                "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                "properties": {
                  "name": {
                    "description": "Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array",
              "x-kubernetes-list-map-keys": [
                "name"
              ],
              "x-kubernetes-list-type": "map"
            },
            "limits": {
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ],
                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                "x-kubernetes-int-or-string": true
              },
              "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
              "type": "object"
            },
            "requests": {
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ],
                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                "x-kubernetes-int-or-string": true
              },
              "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
              "type": "object"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "startupProbe": {
          "description": "StartupProbe specifies configuration for the startup probe.",
          "properties": {
            "exec": {
              "description": "Exec specifies the action to take.",
              "properties": {
                "command": {
                  "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "failureThreshold": {
              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
              "format": "int32",
              "type": "integer"
            },
            "grpc": {
              "description": "GRPC specifies an action involving a GRPC port. This is a beta field and requires enabling GRPCContainerProbe feature gate.",
              "properties": {
                "port": {
                  "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                  "format": "int32",
                  "type": "integer"
                },
                "service": {
                  "description": "Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). \n If this is not specified, the default behavior is defined by gRPC.",
                  "type": "string"
                }
              },
              "required": [
                "port"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "httpGet": {
              "description": "HTTPGet specifies the http request to perform.",
              "properties": {
                "host": {
                  "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                  "type": "string"
                },
                "httpHeaders": {
                  "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                  "items": {
                    "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                    "properties": {
                      "name": {
                        "description": "The header field name",
                        "type": "string"
                      },
                      "value": {
                        "description": "The header field value",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "value"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "path": {
                  "description": "Path to access on the HTTP server.",
                  "type": "string"
                },
                "port": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                  "x-kubernetes-int-or-string": true
                },
                "scheme": {
                  "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                  "type": "string"
                }
              },
              "required": [
                "port"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "initialDelaySeconds": {
              "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
              "format": "int32",
              "type": "integer"
            },
            "periodSeconds": {
              "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
              "format": "int32",
              "type": "integer"
            },
            "successThreshold": {
              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
              "format": "int32",
              "type": "integer"
            },
            "tcpSocket": {
              "description": "TCPSocket specifies an action involving a TCP port.",
              "properties": {
                "host": {
                  "description": "Optional: Host name to connect to, defaults to the pod IP.",
                  "type": "string"
                },
                "port": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                  "x-kubernetes-int-or-string": true
                }
              },
              "required": [
                "port"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "terminationGracePeriodSeconds": {
              "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
              "format": "int64",
              "type": "integer"
            },
            "timeoutSeconds": {
              "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
              "format": "int32",
              "type": "integer"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "storageSecretRef": {
          "description": "DatabaseSecretRef specifies the name of the Secret containing file storage credentials for the environment.",
          "type": "string"
        },
        "terminationGracePeriodSeconds": {
          "description": "TerminationGracePeriodSeconds specifies configuration for the termination grace period.",
          "format": "int64",
          "type": "integer"
        },
        "trust": {
          "description": "Trust specifies the trust certificates CA's.",
          "properties": {
            "customCASecretName": {
              "description": "CustomCASecretName the secret's name that contains custom.crt with additional trusted Certificate Authorities.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "buildGeneration",
        "replicas"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "RuntimeStatus defines the observed state of Runtime",
      "properties": {
        "configMapName": {
          "type": "string"
        },
        "labelSelector": {
          "description": "LabelSelector provides the Pod label selector, used for pod autoscaling.",
          "type": "string"
        },
        "m2EESecretName": {
          "type": "string"
        },
        "masterDeploymentName": {
          "type": "string"
        },
        "observedGeneration": {
          "format": "int64",
          "type": "integer"
        },
        "readyReplicas": {
          "format": "int32",
          "type": "integer"
        },
        "replicaStatuses": {
          "items": {
            "description": "ReplicaStatus represents the status of a given replica within a runtime deployment.",
            "properties": {
              "lastError": {
                "type": "string"
              },
              "licenseStatus": {
                "description": "RuntimeLicenseStatus represents the status of a particular license.",
                "properties": {
                  "licenseID": {
                    "type": "string"
                  },
                  "licenseType": {
                    "type": "string"
                  },
                  "runtimeMode": {
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "replicaName": {
                "type": "string"
              },
              "runtimeStatus": {
                "type": "string"
              },
              "secretsStatus": {
                "description": "RuntimeSecretsStatus represents the status of secrets needed for runtime.",
                "properties": {
                  "sources": {
                    "description": "RuntimeSecretsStatusSources represents sources of secrets.",
                    "properties": {
                      "database": {
                        "type": "string"
                      },
                      "mxAdminPassword": {
                        "type": "string"
                      },
                      "mxConstants": {
                        "type": "string"
                      },
                      "mxRuntimeSettings": {
                        "type": "string"
                      },
                      "storage": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "replicas": {
          "description": "Replicas provides the number of replicas assigned to the app, used for pod autoscaling.",
          "format": "int32",
          "type": "integer"
        },
        "sourceURL": {
          "type": "string"
        },
        "state": {
          "description": "ResourceStatus defines the observed state of a resource",
          "properties": {
            "explanation": {
              "type": "string"
            },
            "state": {
              "description": "ResourceState is the state of a resource provisioned for a Mendix App.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "workerDeploymentName": {
          "type": "string"
        }
      },
      "required": [
        "readyReplicas"
      ],
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
