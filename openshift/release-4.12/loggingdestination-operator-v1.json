{
  "description": "LoggingDestination describes a destination for log messages.",
  "type": "object",
  "required": [
    "type"
  ],
  "properties": {
    "container": {
      "description": "container holds parameters for the Container logging destination. Present only if type is Container.",
      "$ref": "https://raw.githubusercontent.com/diskmanti/schemas/main/openshift/release-4.12/_definitions.json#/definitions/com.github.openshift.api.operator.v1.ContainerLoggingDestinationParameters"
    },
    "syslog": {
      "description": "syslog holds parameters for a syslog endpoint.  Present only if type is Syslog.",
      "$ref": "https://raw.githubusercontent.com/diskmanti/schemas/main/openshift/release-4.12/_definitions.json#/definitions/com.github.openshift.api.operator.v1.SyslogLoggingDestinationParameters"
    },
    "type": {
      "description": "type is the type of destination for logs.  It must be one of the following:\n\n* Container\n\nThe ingress operator configures the sidecar container named \"logs\" on the ingress controller pod and configures the ingress controller to write logs to the sidecar.  The logs are then available as container logs.  The expectation is that the administrator configures a custom logging solution that reads logs from this sidecar.  Note that using container logs means that logs may be dropped if the rate of logs exceeds the container runtime's or the custom logging solution's capacity.\n\n* Syslog\n\nLogs are sent to a syslog endpoint.  The administrator must specify an endpoint that can receive syslog messages.  The expectation is that the administrator has configured a custom syslog instance.",
      "type": [
        "string",
        "null"
      ],
      "default": ""
    }
  },
  "x-kubernetes-unions": [
    {
      "discriminator": "type",
      "fields-to-discriminateBy": {
        "container": "Container",
        "syslog": "Syslog"
      }
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}